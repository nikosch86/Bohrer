services:
  # Main SSH tunnel server
  ssh-server:
    build: .
    environment:
      - DOMAIN=ssh-server
      - SKIP_ACME=true
      - SSH_PORT=22
      - HTTP_PORT=80
      - HTTPS_PORT=443
    volumes:
      - e2e_data:/data
      - ./test/test_authorized_keys:/data/authorized_keys:ro
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "22"]
      interval: 1s
      timeout: 1s
      retries: 5

  # Mock HTTP server for tunneling
  mock-server:
    build:
      context: test/
      dockerfile: Dockerfile.mock
    environment:
      - PORT=3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 1s
      timeout: 1s
      retries: 5

  # SSH client that creates tunnels
  ssh-client:
    build:
      context: .
      dockerfile: Dockerfile.ssh-client
    depends_on:
      ssh-server:
        condition: service_healthy
      mock-server:
        condition: service_healthy
    environment:
      - SSH_HOST=ssh-server
      - SSH_PORT=22
      - TARGET_HOST=mock-server
      - TARGET_PORT=3000
    volumes:
      - tunnel_logs:/logs
    command: ["sleep", "infinity"]

  # Separate HTTP client for testing tunnel endpoints
  http-client:
    build:
      context: .
      dockerfile: Dockerfile.http-client
    depends_on:
      ssh-server:
        condition: service_healthy
    volumes:
      - tunnel_logs:/logs:ro
    command: ["sleep", "infinity"]

volumes:
  e2e_data:
  tunnel_logs: